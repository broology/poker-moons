# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
    aws-cli: circleci/aws-cli@1.4.1
    node: circleci/node@5.0.1

defaults: &defaults
    working_directory: ~/repo
    machine:
        image: ubuntu-2004:202101-01
    resource_class: arm.medium

node_config: &node_config
    install-yarn: true
    node-version: '14.18'

set_env: &set_env
    name: Setup Environment Variables
    command: |
        if [[ $CIRCLE_PULL_REQUEST ]]
        then
          echo 'Fetching Base Commit from GitHub'
          echo 'export CIRCLE_PR_BASE_SHA="$(git rev-parse HEAD~1)"' >> $BASH_ENV
          echo 'export AFFECTED_ARGS="--base ${CIRCLE_PR_BASE_SHA}"' >> $BASH_ENV
        else
          echo 'Fetching Base Commit from Deploy Cache'
          if [[ ! -f dist/last-deploy.txt ]]
          then
            mkdir dist && git rev-parse HEAD~1 > dist/last-deploy.txt
          fi
          echo 'export AFFECTED_ARGS="--base $(cat dist/last-deploy.txt)"' >> $BASH_ENV
        fi
        source $BASH_ENV
        echo $AFFECTED_ARGS

yarn_cache: &yarn_cache
    keys:
        - node-deps-node14-{{ checksum "yarn.lock" }}
        # fallback to using the latest cache if no exact match is found
        - node-deps-node14-

deploy_cache: &deploy_cache
    key: last-deploy-sha

yarn_install: &yarn_install
    name: Install Dependencies
    command: yarn install --frozen-lockfile --non-interactive

build_executors: &build_executors
    name: Build Nx Executors
    command: yarn build:executors

commands:
    setup:
        description: Setup necessary frameworks for deploy
        steps:
            - checkout
            - node/install:
                  <<: *node_config
            - restore_cache:
                  <<: *deploy_cache
            - run:
                  <<: *set_env
            - restore_cache:
                  <<: *yarn_cache

jobs:
    install:
        <<: *defaults
        steps:
            - setup
            - run:
                  <<: *yarn_install
            - save_cache:
                  key: node-deps-node14-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache
                      - node_modules
    check-formatting:
        <<: *defaults
        steps:
            - setup
            - run: yarn format:check ${AFFECTED_ARGS} --parallel 2
    lint:
        <<: *defaults
        steps:
            - setup
            - run: ./node_modules/.bin/nx workspace-lint
            - run: yarn affected:lint ${AFFECTED_ARGS} --parallel 2
    build:
        <<: *defaults
        steps:
            - setup
            - run: yarn affected:build -- ${AFFECTED_ARGS} --parallel 2 --configuration production
            - persist_to_workspace:
                  root: ~/repo
                  paths:
                      - dist/
            - store_artifacts:
                  path: dist
    test:
        <<: *defaults
        steps:
            - setup
            - run: yarn affected:test -- ${AFFECTED_ARGS} --parallel 2 -- --ci --code-coverage
    e2e:
        working_directory: ~/repo
        resource_class: large
        docker:
            - image: circleci/node:14-browsers
        steps:
            - checkout
            - restore_cache:
                  <<: *deploy_cache
            - run:
                  <<: *set_env
            # Not optimal, but the best we can do for now, until cypress is supported on arm instances
            - run:
                  <<: *yarn_install
            - run: yarn affected:e2e -- ${AFFECTED_ARGS} --configuration production -- --headless
            - store_artifacts:
                  path: dist/cypress
    dockerize:
        working_directory: ~/repo
        resource_class: large
        docker:
            - image: circleci/node:14-browsers
        steps:
            - setup
            - attach_workspace:
                  at: ~/repo
            - aws-cli/install:
                  version: '2'
            - setup_remote_docker:
                  version: 20.10.11
            - run:
                  <<: *build_executors
            - run: yarn affected:dockerize -- ${AFFECTED_ARGS} --parallel 2 --tag=${CIRCLE_SHA1}

    deploy:
        <<: *defaults
        steps:
            - setup
            - attach_workspace:
                  at: ~/repo
            - run:
                  <<: *build_executors
            - run: yarn affected -- --target deploy ${AFFECTED_ARGS} --tag=${CIRCLE_SHA1}
            - run: git rev-parse HEAD > dist/last-deploy.txt
            - save_cache:
                  key: last-deploy-sha
                  paths:
                      - dist/last-deploy.txt

workflows:
    version: 2
    pr_check:
        jobs:
            - install
            - check-formatting:
                  requires:
                      - install
            - lint:
                  requires:
                      - install
            - test:
                  requires:
                      - install
            - build:
                  requires:
                      - install
            - e2e:
                  requires:
                      - install
            - dockerize:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - build
            - deploy:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - check-formatting
                      - lint
                      - test
                      - e2e
                      - dockerize
